
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yyrmodgbnzqbmatlypuc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl5cm1vZGdibnpxYm1hdGx5cHVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzc3MDc2ODEsImV4cCI6MjA1MzI4MzY4MX0.GH07WGicLLqRaTk7fCaE-sJ2zK7e25eGtB3dbzh_cx0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    flowType: 'pkce',
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
  }
});

// Helper function to get the app domain
export const getAppDomain = async (): Promise<string> => {
  try {
    const { data, error } = await supabase
      .from('system_settings')
      .select('value')
      .eq('key', 'app_domain')
      .single();
      
    if (error) {
      console.warn("Could not fetch app domain:", error);
      return window.location.origin;
    }
    
    if (data && data.value) {
      const domain = data.value;
      // Ensure domain has protocol
      if (domain.includes('://')) {
        return domain;
      } else {
        const protocol = domain.startsWith('localhost') ? 'http://' : 'https://';
        return `${protocol}${domain}`;
      }
    }
    
    return window.location.origin;
  } catch (error) {
    console.error('Error fetching app domain:', error);
    return window.location.origin;
  }
};
